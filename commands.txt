Step 1:
	git init

Step 2: (Follow HTTPS)
	your remote's URL from SSH to HTTPS:
		git remote set-url origin https://github.com/USERNAME/REPOSITORY.git
		or,
		git remote add origin https://github.com/username/new_repo

	your remote's URL from HTTPS to SSH:
		git remote add origin git@github.com:username/new_repo
		or,
		git remote set-url origin git@github.com:USERNAME/REPOSITORY.git

Step 3:
	git add . (cwd add all),
	git add file_name.ext,
	git add app/file_name.ext,
	git add file_name.ext app/onother.ext

Step 4:
	To know the Git status, you'll need to run:
		git status

Step 5:
	git commit -m "Your message.",
	git commit -a -m "Your message." (Add and commit)

Step 6:
	git push -u origin master

Tools:
	To tell Git who you are:
		git config --global user.name "RafinBiswas"
		git config --global user.email "nillshuvro00@gmail.com"

	A copy of your contract:
		git config --list

	To turn on code highlighting:
		git config --global color.ui true

	you can undo the commit:
		git reset --soft HEAD^

	you can clone repository:
		git clone https://github.com/USERNAME/REPOSITORY.git,
		git clone git@github.com:YourUsername/your-app.git this-name-is-much-better

	you can pull repository branch:
		git pull origin master

	Let's first see our current branches:
		git branch

	To create a new branch:
		git branch branch-name

	To Switched branch:
		git checkout 'branch-name'

	To create a new branch and Switched branch:
		git branch my-new-branch
		git checkout my-new-branch
		or,
		git checkout -b my-new-branch

	To delete branch:
		git branch -d user-profile

	To merge branch:
		git merge branch_name (Switch in main branch)
		Example:
			git add *
			git commit -m "My initial commit message"
			git push -u origin development
			
			Now I want to merge all the changes on the development branch into the master. My current approach is:

			git checkout master 
			git merge development
			git push -u origin master
